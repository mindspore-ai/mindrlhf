# Copyright 2025 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Main entry of Qwen-GRPO training."""
import hydra
from mindspore import Tensor
from omegaconf import DictConfig

no_patch_tensor_shape = Tensor.shape
from mindrlhf.trainer.spmd.grpo_trainer import GRPOTrainer


@hydra.main(config_path="./", config_name="grpo_config", version_base=None)
def main(rl_config: DictConfig):
    """
    Main entry.

    Args:
        rl_config (DictConfig): Configurations generated by hydra which combine yaml and cli args.
    """
    trainer = GRPOTrainer(config_from_yaml=rl_config, no_patch_tensor_shape=no_patch_tensor_shape)
    trainer.run_grpo_train()


if __name__ == "__main__":
    """
    Examples to run main.py for now:

    python main.py --config-path="./" --config-name="new.yaml" rl_config.model_name="qwen" \
                   rl_config.tokenizer_type="qwen" \
                   rl_config.deterministic="OFF" \
                   actor_config.parallel_config.data_parallel=2 \
                   actor_config.parallel_config.model_parallel=4 \
                   actor_config.parallel_config.pipeline_stage=16 \
                   ...
                   generate_config.use_vllm=1
    """
    main()
